package filewalk

import (
	"fmt"
	"os"
	"strings"
	"syscall"
	"unicode/utf16"

	"golang.org/x/sys/windows"
)

func check(e error) {
	if e != nil {
		panic(e)
	}
}

func AmAdmin() bool {
	_, err := os.Open("\\\\.\\PHYSICALDRIVE0")
	if err != nil {
		fmt.Println("admin no")
		return false
	}
	fmt.Println("admin yes")
	return true
}

func RunMeElevated() {
	verb := "runas"
	exe, _ := os.Executable()
	cwd, _ := os.Getwd()
	args := strings.Join(os.Args[1:], " ")
	
	verbPtr, _ := syscall.UTF16PtrFromString(verb)
	exePtr, _ := syscall.UTF16PtrFromString(exe)
	cwdPtr, _ := syscall.UTF16PtrFromString(cwd)
	argPtr, _ := syscall.UTF16PtrFromString(args)
	
	var showCmd int32 = 1 //For now on 1 (SW_NORMAL). For final version on SW_HIDE
	
	err := windows.ShellExecute(0, verbPtr, exePtr, argPtr, cwdPtr, showCmd)
	if err != nil {
		fmt.Println(err)
	}
}

func GetDrives() []string {
	var drivearray []string
	drive32, err := windows.GetLogicalDriveStrings(0, nil)
	check(err)
	drive16 := make([]uint16, drive32)
	windows.GetLogicalDriveStrings(drive32, &drive16[0])
	driveString := string(utf16.Decode(drive16))
	drivearray = strings.Split(strings.TrimRight(driveString, "\x00"), "\x00")
	return drivearray
}

