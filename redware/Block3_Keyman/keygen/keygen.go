package keygen

import (
	"crypto/ecdsa"
	"crypto/elliptic"
	"crypto/rand"
	"crypto/sha256"
	"fmt"

	"github.com/Redhead92/Workspace/tree/main/redware/Block3_Keyman/keycomm"
)

func TgECDHgen() (sharedt [32]byte, err error) {
	privt, _ := ecdsa.GenerateKey(elliptic.P256(), rand.Reader)
	pubkt := privt.PublicKey
	//TODO: dynamically load address string
	waddr := "http://localhost:8010/callhome"
	fmt.Printf("\npubkey target = %v", pubkt)

	pubks, err := keycomm.CallHome(pubkt, waddr)
	if err != nil {
		return sharedt, err
	}else{
		pubks.CurveParams = elliptic.P256().Params()
		shkey, _ := pubks.CurveParams.ScalarMult(pubks.X, pubks.Y, privt.D.Bytes())
		sharedt = sha256.Sum256(shkey.Bytes())
		return sharedt, nil
	}
}
